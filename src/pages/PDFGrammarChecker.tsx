import React from 'react';
import { useAuth } from '@/components/AuthProvider';
import { useNavigate, Link } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { LogOut, ArrowLeft } from 'lucide-react';
import { toast } from 'sonner';
import { supabase } from '@/integrations/supabase/client';
import { useSimplePDFProcessor } from '@/hooks/useSimplePDFProcessor';
import PDFUploader from '@/components/PDF/PDFUploader';
import PDFProcessor from '@/components/PDF/PDFProcessor';
import CorrectedPDFViewer from '@/components/PDF/CorrectedPDFViewer';
import { useEffect, useState } from 'react';

const PDFGrammarChecker = () => {
  const { user, loading } = useAuth();
  const navigate = useNavigate();
  const [profile, setProfile] = useState<any>(null);
  
  const {
    pdfFile,
    processingStatus,
    correctedPDF,
    uploadPDF,
    processPDF,
    reset,
    downloadCorrectedPDF
  } = useSimplePDFProcessor();

  useEffect(() => {
    if (!loading && !user) {
      navigate('/login');
      return;
    }

    if (user) {
      // Fetch user profile
      const fetchProfile = async () => {
        const { data } = await supabase
          .from('profiles')
          .select('*')
          .eq('id', user.id)
          .single();
        setProfile(data);
      };
      fetchProfile();
    }
  }, [user, loading, navigate]);

  const handleLogout = async () => {
    try {
      await supabase.auth.signOut();
      toast.success('‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§≤‡•â‡§ó ‡§Ü‡§â‡§ü ‡§π‡•ã ‡§ó‡§è!');
      navigate('/');
    } catch (error) {
      toast.error('‡§≤‡•â‡§ó ‡§Ü‡§â‡§ü ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø');
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600"></div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
      {/* Navigation */}
      <nav className="bg-white shadow-sm border-b">
        <div className="container mx-auto px-6 py-4">
          <div className="flex justify-between items-center">
            <div className="flex items-center space-x-4">
              <Link to="/dashboard" className="flex items-center text-gray-600 hover:text-gray-800">
                <ArrowLeft className="h-4 w-4 mr-2" />
                ‡§µ‡§æ‡§™‡§∏
              </Link>
              <div className="text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                PDF ‡§µ‡•ç‡§Ø‡§æ‡§ï‡§∞‡§£ ‡§∏‡•Å‡§ß‡§æ‡§∞‡§ï (AI Vision)
              </div>
            </div>
            <div className="flex items-center space-x-4">
              <Link to="/dashboard">
                <Button variant="outline">‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°</Button>
              </Link>
              <Link to="/grammar-checker">
                <Button variant="outline">‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§∏‡•Å‡§ß‡§æ‡§∞‡§ï</Button>
              </Link>
              {user && (
                <>
                  <span className="text-gray-600">‡§®‡§Æ‡§∏‡•ç‡§§‡•á, {profile?.name || user.email}</span>
                  <Button variant="outline" onClick={async () => {
                    try {
                      await supabase.auth.signOut();
                      toast.success('‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§≤‡•â‡§ó ‡§Ü‡§â‡§ü ‡§π‡•ã ‡§ó‡§è!');
                      navigate('/');
                    } catch (error) {
                      toast.error('‡§≤‡•â‡§ó ‡§Ü‡§â‡§ü ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø');
                    }
                  }}>
                    <LogOut className="h-4 w-4 mr-2" />
                    ‡§≤‡•â‡§ó ‡§Ü‡§â‡§ü
                  </Button>
                </>
              )}
            </div>
          </div>
        </div>
      </nav>

      <div className="container mx-auto px-6 py-8">
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-gray-800 mb-4">
            PDF ‡§µ‡•ç‡§Ø‡§æ‡§ï‡§∞‡§£ ‡§∏‡•Å‡§ß‡§æ‡§∞‡§ï (AI Vision)
          </h1>
          <p className="text-lg text-gray-600 max-w-2xl mx-auto">
            ‡§Ö‡§™‡§®‡•Ä ‡§π‡§ø‡§Ç‡§¶‡•Ä PDF ‡§´‡§º‡§æ‡§á‡§≤‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§µ‡•ç‡§Ø‡§æ‡§ï‡§∞‡§£, ‡§µ‡§∞‡•ç‡§§‡§®‡•Ä ‡§î‡§∞ ‡§µ‡§ø‡§∞‡§æ‡§Æ ‡§ö‡§ø‡§π‡•ç‡§® ‡§ï‡•Ä ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§Ü‡§∏‡§æ‡§®‡•Ä ‡§∏‡•á ‡§∏‡•Å‡§ß‡§æ‡§∞‡•á‡§Ç‡•§ 
            ‡§Ø‡§π OpenAI Vision API ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§ú‡•ã ‡§Ö‡§ß‡§ø‡§ï ‡§∏‡§ü‡•Ä‡§ï ‡§î‡§∞ ‡§µ‡§ø‡§∂‡•ç‡§µ‡§∏‡§®‡•Ä‡§Ø ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ ‡§¶‡•á‡§§‡§æ ‡§π‡•à‡•§
          </p>
        </div>

        <div className="max-w-4xl mx-auto space-y-6">
          {/* Upload Section */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <div>
              <h2 className="text-xl font-semibold text-gray-800 mb-4">
                1. PDF ‡§´‡§º‡§æ‡§á‡§≤ ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç
              </h2>
              <PDFUploader
                onUpload={uploadPDF}
                uploadedFile={pdfFile ? { name: pdfFile.name, size: pdfFile.size } : null}
                onRemove={reset}
                disabled={processingStatus.status !== 'idle' && processingStatus.status !== 'completed'}
              />
            </div>

            <div>
              <h2 className="text-xl font-semibold text-gray-800 mb-4">
                2. ‡§™‡•ç‡§∞‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç
              </h2>
              <PDFProcessor
                status={processingStatus}
                onProcess={processPDF}
                onReset={reset}
                canProcess={!!pdfFile && processingStatus.status === 'idle'}
              />
            </div>
          </div>

          {/* Results Section */}
          {correctedPDF && processingStatus.status === 'completed' && (
            <div>
              <h2 className="text-xl font-semibold text-gray-800 mb-4">
                3. ‡§∏‡•Å‡§ß‡§æ‡§∞‡•Ä ‡§ó‡§à PDF ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç
              </h2>
              <CorrectedPDFViewer
                correctedPDF={correctedPDF}
                onDownload={downloadCorrectedPDF}
                filename={pdfFile?.name || 'document.pdf'}
              />
            </div>
          )}

          {/* Enhanced Notice Section */}
          <div className="bg-gradient-to-r from-green-50 to-blue-50 border border-green-200 rounded-lg p-6">
            <h3 className="text-lg font-semibold text-green-800 mb-2">üöÄ ‡§®‡§à ‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ - AI Vision Technology!</h3>
            <p className="text-green-700 mb-3">
              ‡§Ø‡§π enhanced version OpenAI ‡§ï‡•á Vision API ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§ú‡•ã:
            </p>
            <ul className="list-disc list-inside text-green-700 space-y-1">
              <li>PDF pages ‡§ï‡•ã images ‡§Æ‡•á‡§Ç convert ‡§ï‡§∞‡§§‡§æ ‡§π‡•à</li>
              <li>Advanced OCR ‡§ï‡•á ‡§≤‡§ø‡§è GPT-4 Vision ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡§æ ‡§π‡•à</li>
              <li>Scanned PDFs ‡§î‡§∞ image-based documents ‡§ï‡•ã ‡§¨‡•á‡§π‡§§‡§∞ handle ‡§ï‡§∞‡§§‡§æ ‡§π‡•à</li>
              <li>Complex layouts ‡§î‡§∞ formatting ‡§ï‡•ã ‡§∏‡§Æ‡§ù‡§§‡§æ ‡§π‡•à</li>
              <li>‡§π‡§ø‡§Ç‡§¶‡•Ä text recognition ‡§Æ‡•á‡§Ç ‡§¨‡•á‡§π‡§§‡§∞ accuracy ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡§æ ‡§π‡•à</li>
            </ul>
          </div>

          {/* Features Section */}
          <div className="bg-white rounded-lg shadow-sm border p-6 mt-8">
            <h3 className="text-lg font-semibold text-gray-800 mb-4">‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ‡§è‡§Ç:</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="flex items-start space-x-3">
                <div className="w-2 h-2 bg-blue-500 rounded-full mt-2"></div>
                <div>
                  <h4 className="font-medium text-gray-800">AI Vision Processing</h4>
                  <p className="text-sm text-gray-600">OpenAI Vision API ‡§∏‡•á powered advanced text extraction</p>
                </div>
              </div>
              <div className="flex items-start space-x-3">
                <div className="w-2 h-2 bg-green-500 rounded-full mt-2"></div>
                <div>
                  <h4 className="font-medium text-gray-800">Smart OCR</h4>
                  <p className="text-sm text-gray-600">Scanned PDFs ‡§î‡§∞ images ‡§∏‡•á accurate text extraction</p>
                </div>
              </div>
              <div className="flex items-start space-x-3">
                <div className="w-2 h-2 bg-purple-500 rounded-full mt-2"></div>
                <div>
                  <h4 className="font-medium text-gray-800">Advanced Grammar Correction</h4>
                  <p className="text-sm text-gray-600">AI-powered ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§µ‡•ç‡§Ø‡§æ‡§ï‡§∞‡§£ ‡§î‡§∞ ‡§µ‡§∞‡•ç‡§§‡§®‡•Ä ‡§∏‡•Å‡§ß‡§æ‡§∞</p>
                </div>
              </div>
              <div className="flex items-start space-x-3">
                <div className="w-2 h-2 bg-orange-500 rounded-full mt-2"></div>
                <div>
                  <h4 className="font-medium text-gray-800">Multi-page Support</h4>
                  <p className="text-sm text-gray-600">Multiple pages ‡§ï‡•ã process ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§ï‡•ç‡§∑‡§Æ‡§§‡§æ</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default PDFGrammarChecker;
